/*! angular-envoy - v0.1.0
 * 
 * Copyright (c) 2015 Focusvision Worldwide; Licensed MIT
 */

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";module.exports=require("./lib");
},{"./lib":14}],2:[function(require,module,exports){
"use strict";function action(n){return{restrict:"A",require:["ngModel","^form"],link:function(e,t,i,o){var c,a=o[0],r=o[1];(c=i.messageAction)&&a.$name&&r.$name&&n.setAction(r.$name,a.$name,function(){e.$eval(c)})}}}action.$inject=["$envoy"],module.exports=action;
},{}],3:[function(require,module,exports){
"use strict";module.exports={envoyAction:require("./action"),envoyMessages:require("./messages"),envoyList:require("./list"),envoyProxy:require("./proxy")};
},{"./action":2,"./list":4,"./messages":5,"./proxy":9}],4:[function(require,module,exports){
"use strict";function list(e){return{restrict:"EA",scope:!0,require:"^envoyMessages",templateUrl:opts.templateUrl,link:function(t,n,i,r){var o=e.findParentCtrl(i.envoyList||i["for"],r);o.bindView(t),t.$on("$destroy",function(){o.unbindView()})}}}var opts=require("../envoy/opts");list.$inject=["$envoy"],module.exports=list;
},{"../envoy/opts":12}],5:[function(require,module,exports){
"use strict";module.exports=require("./messages");
},{"./messages":7}],6:[function(require,module,exports){
(function (global){
"use strict";function MessagesCtrl(e,t,n,r,i){var a;this.bindView=function(e){if(a.scope)throw new Error("view already bound!");return a.scope=e,e.data=viewData(t.DEFAULT_LEVEL),this},this.unbindView=function(){return delete a.scope,this},function(){var o,s;Object.defineProperties(this,{$errorLevel:{get:function(){return s.$errorLevel},set:function(e){s.$errorLevel=e}},$name:{get:function(){return s.$name}},$viewData:{get:function(){var e;return(e=_.get(a,"scope.data"))?e:_.get(a,"scope")?a.scope.data=viewData(t.DEFAULT_LEVEL):void 0},set:function(e){a.scope.data=e}}}),s=this.$form=e.controller("form"),this.$parent=n.parent&&(o=i(n.parent)(r))?t.findParentCtrl(o,e.parent().controller("envoyMessages")):null,a=this.$parent?this.$view=this.$parent.$view:this.$view={}}.call(this)}var _="undefined"!=typeof window?window._:"undefined"!=typeof global?global._:null,viewData=require("./viewdata");MessagesCtrl.$inject=["$element","$envoy","$attrs","$scope","$interpolate"],module.exports=MessagesCtrl;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./viewdata":8}],7:[function(require,module,exports){
"use strict";function messages(e){return{restrict:"AE",require:"envoyMessages",controller:require("./messages-ctrl"),scope:!0,link:function(s,r,t,a){s.$on("$formStateChanged",function(s,r){var t,o=a.$viewData;o&&(t=r.errorLevel,o.messages=r.messages,o.error=!!t,o.className=r.errorLevelName,o.title=e.levelDescription(t),debug('envoyMessages directive for form "%s" received $formStateChanged event; view data:',a.$name,o))})}}}var debug=require("debug")("envoy:directives:messages");messages.$inject=["$envoy"],module.exports=messages;
},{"./messages-ctrl":6,"debug":15}],8:[function(require,module,exports){
(function (global){
"use strict";function viewData(e){var i={reset:function(){this.error=!1,this.messages={},this.title=null,this.className=null,this.errorLevel=e},id:_.uniqueId(ID_PREFIX)};return i.reset(),debug('Created viewdata object with id "%s"',i.id),i}var _="undefined"!=typeof window?window._:"undefined"!=typeof global?global._:null,ID_PREFIX="envoy-viewdata-",debug=require("debug")("envoy:directives:messages:viewdata");module.exports=viewData;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"debug":15}],9:[function(require,module,exports){
(function (global){
"use strict";function proxy(e){var r="proxy";return{restrict:"A",require:"ngModel",link:function(o,n,a,l){var t;(t=a.envoyProxy)&&(n.addClass("errorlevel"),o.$on("$formStateChanged",function(o,a){var i;_.find(a.forms,{$name:t})&&(_.each(e.ERRORLEVELS,function(e,r){n.removeClass(r)}),i=a.errorLevel,l.$setValidity(r,i),i&&n.addClass(a.errorLevelName))}))}}}var _="undefined"!=typeof window?window._:"undefined"!=typeof global?global._:null;proxy.$inject=["$envoy"],module.exports=proxy;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],10:[function(require,module,exports){
(function (global){
'use strict';

var _ = (typeof window !== "undefined" ? window._ : typeof global !== "undefined" ? global._ : null),
  opts = require('./opts');

var BROADCAST_DEBOUNCE_MS = 250,
  debug = require('debug')('envoy:$envoy:factory');

function envoyFactory($http, $q) {

  /**
   * Error levels as configured in opts in order, by name
   * @type {Array.<string>}
   */
  var LEVEL_ARRAY = _.pluck(opts.levels, 'name'),

    /**
     * Mapping of error level names to indices in {@link LEVEL_ARRAY}
     * @type {Object.<string,number>}
     */
    LEVELS = _(LEVEL_ARRAY)
      .invert()
      .mapValues(_.parseInt)
      .value(),

    /**
     * Lookup of forms and controls to any actions bound via the
     * messageAction directive.  An action is simply an AngularJS
     * expression which will be evaluated.
     * @type {Object.<string,Object.<string,string>>}
     */
    actions = {},

    prototype;

  /**
   * Retrieves a collection of messages for a form and/or control
   * within that form.  If no parameters, returns the entirety of the
   * data file.
   * @param {FormController} form Form controller
   * @returns {*} Value, if any
   */
  function $envoy(form) {
    var result;
    if ((result = $envoy._cache[form.$name])) {
      return $q.when(result);
    }
    return $http.get(opts.dataFile, {
      cache: true
    })
      .then(function (res) {

        /**
         * Entirety of the data file
         * @type {Object}
         */
        var messages = res.data;

        if (form) {
          // If the form has an alias (use the "alias" directive),
          // this name takes precedence.
          messages = _(messages[form.$alias || form.$name])
            // here we pick only the controls that are invalid.
            .mapValues(function (controlMsgOptions, controlMsgName) {
              var formControl = form[controlMsgName],
              // if this is truthy, then we have errors in the given
              // control
                error = formControl && _.size(formControl.$error);

              if (formControl && error) {
                // get the problem tokens and grab any actions
                // if present.  actions are assigned at the control
                // level, but we don't have granular control over
                // which validation token triggers which action.
                // so, if there were two problems with one control,
                // both tokens would receive the action prop.
                return _(controlMsgOptions)
                  .pick(_.keys(formControl.$error))
                  .each(function (tokenInfo) {
                    tokenInfo.action =
                      $envoy.getAction(form.$name, controlMsgName);
                  })
                  .value();

              }
            })
            .pick(_.identity)
            .value();
        }

        $envoy._cache[form.$name] = messages;

        return messages;
      });
  }

  prototype = {

    _cache: {},

    /**
     * Utility function to convert an error level into a number or
     * string
     * @param {(number|string)} [errorLevel] Error level, or default
     *     level
     * @returns {(number|string)} Corresponding string/number
     */
    level: function level(errorLevel) {
      return _.isString(errorLevel) ?
      LEVELS[errorLevel] || LEVELS[opts.defaultLevel] :
      LEVEL_ARRAY[errorLevel] || opts.defaultLevel;
    },

    /**
     * Given a `FormController`, calculate the maximum error level
     * for its controls which are invalid.
     * @param {FormController} form form to inspect
     * @returns {Promise.<string>} Level name
     * @throws if no FormController passed
     */
    formErrorLevel: function formErrorLevel(form) {
      if (!form) {
        throw new Error('parameter is required');
      }
      return $envoy(form)
        .then(function (formMessages) {
          return $envoy._formErrorLevel(form, formMessages);
        });
    },

    _formErrorLevel: function _formErrorLevel(form, formMessages) {
      /**
       * Index of the default error level
       * @type {number}
       */
      var defaultLevelNum = LEVELS[opts.defaultLevel],

        /**
         * Maximum error level of all validation tokens within all
         * controls of this form
         * @type {number}
         */
        maxLevel = _.reduce(formMessages,
          function (result, controlMsgOpts) {

            /**
             * Maximum error level of any validation token within
             * the control which is in "invalid" state.
             * @type {number}
             */
            var maxControlLevel = _(controlMsgOpts)
              .pick(function (tokenOpts, tokenName) {
                return form.$error[tokenName];
              })
              .pluck('level')
              .map($envoy.level)
              .max();

            return Math.max(result, maxControlLevel);
          },
          defaultLevelNum);

      debug('Computed errorLevel "%s" for form "%s"',
        $envoy.level(maxLevel),
        form.$name);

      return LEVEL_ARRAY[maxLevel];
    },

    _lastControl: null,
    _lastControlError: null,
    _broadcasting,
    $broadcast: function $broadcast(form, control) {
      var parentForm = form,
        broadcast = _.debounce(function broadcast() {
          var hierarchy = [parentForm];

          debug('Broadcasting from form "%s"; "%s" changed',
            form.$name,
            control.$name);

          while (parentForm.$$parentForm && parentForm.$$parentForm.$name) {
            parentForm = parentForm.$$parentForm;
            hierarchy.unshift(parentForm);
          }

          $envoy._broadcasting = $q.all(_.map(hierarchy, $envoy))
            .then(function (pileOfMessages) {
              var defaultLevel = LEVELS[opts.defaultLevel],
                messages = {},
                maxErrorLevel = _.reduce(pileOfMessages,
                  function (result, formMessages, idx) {
                    var form = hierarchy[idx],
                      errorLevelName = $envoy._formErrorLevel(form,
                        formMessages),
                      errorLevel = LEVELS[errorLevelName];

                    form.$errorLevel = errorLevel;
                    messages[form.$name] = formMessages;
                    return _.isNumber(errorLevel) ?
                      Math.max(result,
                        errorLevel) :
                      result;
                  },
                  defaultLevel);

              parentForm.$formScope.$broadcast('$formStateChanged',
                {
                  errorLevel: maxErrorLevel,
                  errorLevelName: LEVEL_ARRAY[maxErrorLevel],
                  messages: _.omit(messages, _.isEmpty),
                  forms: hierarchy,
                  control: control
                });

              $envoy._lastControl = control;
              $envoy._lastControlError = _.keys(control.$error);
            });

        }, BROADCAST_DEBOUNCE_MS);

      delete $envoy._cache[form.$name];

      if ($envoy._broadcasting) {
        return $envoy._broadcasting.then($envoy.$broadcast.bind(null,
          form,
          control));
      }

      return $q.when(broadcast());

    },

    /**
     * Set an action to be executed at some point.  Used by the
     * envoyList directive's view, so that you can click on an
     * error and be taken to where the error is.
     * @todo make controlName optional?
     * @param {string} formName Name of form
     * @param {string} controlName Name of control
     * @param {string} action AngularJS expression to evaluate
     */
    setAction: function setAction(formName, controlName, action) {
      var formActions = actions[formName] = actions[formName] || {};
      formActions[controlName] = action;
    },

    /**
     * Gets a stored action.
     * @param {string} formName Name of form for action
     * @param {string} controlName Name of control for action
     * @returns {(string|undefined)} The action (AngularJS
     *     expression), if it exists.
     */
    getAction: function getAction(formName, controlName) {
      return _.get(actions, _.format('%s.%s', formName, controlName));
    },

    /**
     * Utility function to get a parent envoy directive.
     * @param {string} formName Find the messagesDirectiveCtrl
     *     attached to form with this name
     * @param {MessagesCtrl} envoyMessages Current
     *     messagesDirectiveCtrl
     * @returns {MessagesCtrl}
     */
    findParentCtrl: function findParentCtrl(formName, envoyMessages) {
      while (envoyMessages.$name !== formName) {
        envoyMessages = envoyMessages.$parent;
        if (!envoyMessages) {
          throw new Error('cannot find parent with name ' + formName);
        }
      }
      return envoyMessages;
    },

    levelDescription: function levelDescription(errorLevel) {
      var level;
      return ((level = $envoy.LEVELS[errorLevel]) && level.description);
    },

    /**
     * Exposed for handiness
     * @type {string}
     */
    DEFAULT_LEVEL: opts.defaultLevel,

    /**
     * Exposed for handiness.  The kinder, gentler version of
     * opts.levels
     * @type {Object.<string,number>}
     */
    ERRORLEVELS: LEVELS,

    /**
     * Exposed for handiness
     * @type {Array.<Object.<string,string>>}
     */
    LEVELS: opts.levels,

    opts: opts

  };

  _.extend($envoy, prototype);

  return $envoy;
}
envoyFactory.$inject = ['$http', '$q'];

module.exports = envoyFactory;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./opts":12,"debug":15}],11:[function(require,module,exports){
(function (global){
"use strict";function envoyProvider(){this.options=function(e){return _.extend(opts,e),debug("New options set:",opts),opts},this.$get=require("./factory")}var opts=require("./opts"),_="undefined"!=typeof window?window._:"undefined"!=typeof global?global._:null,debug=require("debug")("envoy:$envoy:provider");module.exports=envoyProvider;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./factory":10,"./opts":12,"debug":15}],12:[function(require,module,exports){
"use strict";var DEFAULT_HIDE_DELAY=900,DEFAULT_LEVELS=[{name:"ok",description:"Fixed!"},{name:"warning",description:"Warning"},{name:"error",description:"Error"}],DEFAULT_DATA_FILE="messages.json",DEFAULT_LEVEL="ok";module.exports={levels:DEFAULT_LEVELS,defaultLevel:DEFAULT_LEVEL,dataFile:DEFAULT_DATA_FILE,hideDelay:DEFAULT_HIDE_DELAY,templateUrl:"partials/messages.html"};
},{}],13:[function(require,module,exports){
(function (global){
"use strict";function formDecorator(e){function t(e,t,r,o,a,s,n){var $;s.invoke(i,this,{$element:e,$scope:r,$animate:o,$interpolate:a,$attrs:t}),this.$isForm=!0,this.$name&&($=this.$setValidity,debug("Instantiating patched controller for form %s",this.$name),_.extend(this,{$alias:t.alias||this.$name,$formScope:r,$$lastErrorSize:0,$setValidity:function(e,t,r){var i=!r.$isForm,o=i&&_.has(this,r.$name);$.apply(this,arguments),o&&_.size(this.$error)!==this.$$lastErrorSize&&(n.$broadcast(this,r),this.$$lastErrorSize=_.size(this.$error))}}),_.has(r,this.$alias)||(r[this.$alias]=this))}var r=_.first(e),i=r.controller;return t.$inject=["$element","$attrs","$scope","$animate","$interpolate","$injector","$envoy"],r.controller=t,r.$scope=!0,e}var _="undefined"!=typeof window?window._:"undefined"!=typeof global?global._:null,debug=require("debug")("envoy:formDecorator");formDecorator.$inject=["$delegate"],module.exports=formDecorator;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"debug":15}],14:[function(require,module,exports){
(function (global){
"use strict";function config(e){e.decorator("ngFormDirective",require("./form-decorator")),debug("%s v%s ready",pkg.name,pkg.version)}var angular="undefined"!=typeof window?window.angular:"undefined"!=typeof global?global.angular:null,_="undefined"!=typeof window?window._:"undefined"!=typeof global?global._:null,directives=require("./directives"),pkg=require("../package.json"),MODULE_NAME="fv.envoy",debug=require("debug")("envoy"),envoy;config.$inject=["$provide"],envoy=angular.module(MODULE_NAME,[]).config(config).provider("$envoy",require("./envoy")),_.each(directives,function(e,n){envoy.directive(n,e)}),module.exports=envoy;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../package.json":18,"./directives":3,"./envoy":11,"./form-decorator":13,"debug":15}],15:[function(require,module,exports){
function useColors(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function formatArgs(){var o=arguments,e=this.useColors;if(o[0]=(e?"%c":"")+this.namespace+(e?" %c":" ")+o[0]+(e?"%c ":" ")+"+"+exports.humanize(this.diff),!e)return o;var r="color: "+this.color;o=[o[0],r,"color: inherit"].concat(Array.prototype.slice.call(o,1));var t=0,s=0;return o[0].replace(/%[a-z%]/g,function(o){"%%"!==o&&(t++,"%c"===o&&(s=t))}),o.splice(s,0,r),o}function log(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function save(o){try{null==o?exports.storage.removeItem("debug"):exports.storage.debug=o}catch(e){}}function load(){var o;try{o=exports.storage.debug}catch(e){}return o}function localstorage(){try{return window.localStorage}catch(o){}}exports=module.exports=require("./debug"),exports.log=log,exports.formatArgs=formatArgs,exports.save=save,exports.load=load,exports.useColors=useColors,exports.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:localstorage(),exports.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],exports.formatters.j=function(o){return JSON.stringify(o)},exports.enable(load());
},{"./debug":16}],16:[function(require,module,exports){
function selectColor(){return exports.colors[prevColor++%exports.colors.length]}function debug(e){function r(){}function o(){var e=o,r=+new Date,s=r-(prevTime||r);e.diff=s,e.prev=prevTime,e.curr=r,prevTime=r,null==e.useColors&&(e.useColors=exports.useColors()),null==e.color&&e.useColors&&(e.color=selectColor());var t=Array.prototype.slice.call(arguments);t[0]=exports.coerce(t[0]),"string"!=typeof t[0]&&(t=["%o"].concat(t));var n=0;t[0]=t[0].replace(/%([a-z%])/g,function(r,o){if("%%"===r)return r;n++;var s=exports.formatters[o];if("function"==typeof s){var p=t[n];r=s.call(e,p),t.splice(n,1),n--}return r}),"function"==typeof exports.formatArgs&&(t=exports.formatArgs.apply(e,t));var p=o.log||exports.log||console.log.bind(console);p.apply(e,t)}r.enabled=!1,o.enabled=!0;var s=exports.enabled(e)?o:r;return s.namespace=e,s}function enable(e){exports.save(e);for(var r=(e||"").split(/[\s,]+/),o=r.length,s=0;o>s;s++)r[s]&&(e=r[s].replace(/\*/g,".*?"),"-"===e[0]?exports.skips.push(new RegExp("^"+e.substr(1)+"$")):exports.names.push(new RegExp("^"+e+"$")))}function disable(){exports.enable("")}function enabled(e){var r,o;for(r=0,o=exports.skips.length;o>r;r++)if(exports.skips[r].test(e))return!1;for(r=0,o=exports.names.length;o>r;r++)if(exports.names[r].test(e))return!0;return!1}function coerce(e){return e instanceof Error?e.stack||e.message:e}exports=module.exports=debug,exports.coerce=coerce,exports.disable=disable,exports.enable=enable,exports.enabled=enabled,exports.humanize=require("ms"),exports.names=[],exports.skips=[],exports.formatters={};var prevColor=0,prevTime;
},{"ms":17}],17:[function(require,module,exports){
function parse(e){if(e=""+e,!(e.length>1e4)){var a=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(a){var r=parseFloat(a[1]),c=(a[2]||"ms").toLowerCase();switch(c){case"years":case"year":case"yrs":case"yr":case"y":return r*y;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*h;case"minutes":case"minute":case"mins":case"min":case"m":return r*m;case"seconds":case"second":case"secs":case"sec":case"s":return r*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r}}}}function short(e){return e>=d?Math.round(e/d)+"d":e>=h?Math.round(e/h)+"h":e>=m?Math.round(e/m)+"m":e>=s?Math.round(e/s)+"s":e+"ms"}function long(e){return plural(e,d,"day")||plural(e,h,"hour")||plural(e,m,"minute")||plural(e,s,"second")||e+" ms"}function plural(s,e,a){return e>s?void 0:1.5*e>s?Math.floor(s/e)+" "+a:Math.ceil(s/e)+" "+a+"s"}var s=1e3,m=60*s,h=60*m,d=24*h,y=365.25*d;module.exports=function(s,e){return e=e||{},"string"==typeof s?parse(s):e["long"]?long(s):short(s)};
},{}],18:[function(require,module,exports){
module.exports={"name":"angular-envoy","version":"0.1.0","description":"Highly flexible form validation messaging for AngularJS","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":"Christopher Hiller <chiller@focusvision.com>","license":"MIT","devDependencies":{"angular":"^1.4.1","browserify":"^10.2.4","chai":"^3.0.0","eslint":"^0.23.0","exorcist":"^0.4.0","exposify":"^0.4.3","grunt":"^0.4.5","grunt-browserify":"^3.8.0","grunt-bump":"^0.3.1","grunt-cli":"^0.1.13","grunt-contrib-clean":"^0.6.0","grunt-dev-update":"^1.3.0","grunt-eslint":"^15.0.0","grunt-exorcise":"^2.0.0","grunt-mocha-cov":"^0.4.0","grunt-ngdocs":"^0.2.7","jit-grunt":"^0.9.1","load-grunt-config":"^0.17.1","minifyify":"^7.0.1","minimatch":"^2.0.8","mocha":"^2.2.5","mocha-lcov-reporter":"0.0.2","through2":"^2.0.0","time-grunt":"^1.2.1","transformify":"^0.1.2"},"peerDependencies":{"angular":"^1.4.1"},"dependencies":{"debug":"^2.2.0","lodash":"^3.9.3"}}
},{}]},{},[1])


//# sourceMappingURL=envoy.min.js.map