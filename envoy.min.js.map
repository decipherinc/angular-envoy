{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","package.json","index.js","lib/index.js","lib/form-decorator.js","lib/directives/index.js","lib/envoy/index.js","node_modules/debug/browser.js","lib/directives/action.js","lib/directives/list.js","lib/directives/proxy.js","lib/envoy/factory.js","lib/envoy/opts.js","lib/directives/messages/index.js","node_modules/debug/debug.js","lib/directives/messages/messages.js","node_modules/debug/node_modules/ms/index.js","lib/directives/messages/messages-ctrl.js","lib/directives/messages/viewdata.js"],"names":["module","exports","require","config","$provide","decorator","debug","pkg","name","version","angular","window","global","_","directives","MODULE_NAME","envoy","$inject","provider","each","directive","formDecorator","$delegate","MessagesFormController","$element","$attrs","$scope","$animate","$interpolate","$injector","$envoy","$setValidity","invoke","formController","this","$isForm","$name","extend","$alias","alias","$formScope","$$lastErrorSize","token","value","control","isNotForm","formHasControl","has","apply","arguments","size","$error","emit","form","first","controller","envoyAction","envoyMessages","envoyList","envoyProxy","envoyProvider","options","newOpts","opts","$get","useColors","document","documentElement","style","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","args","namespace","humanize","diff","c","color","concat","Array","prototype","slice","call","index","lastC","replace","splice","log","Function","save","namespaces","storage","removeItem","e","load","r","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable","action","restrict","link","scope","element","attrs","ctrls","ngModel","messageAction","setAction","$eval","list","templateUrl","parent","findParentCtrl","bindView","$on","unbindView","proxy","TOKEN","target","addClass","evt","data","isInvalid","ERRORLEVELS","errorlevel","errorLevelName","removeClass","errorLevel","envoyFactory","$http","$q","result","_cache","when","get","dataFile","cache","then","res","messages","mapValues","controlMsgOptions","controlMsgName","formControl","error","pick","keys","tokenInfo","getAction","identity","LEVEL_ARRAY","pluck","levels","LEVELS","invert","actions","bindings","level","isString","defaultLevel","formErrorLevel","Error","formMessages","_formErrorLevel","defaultLevelNum","maxLevel","reduce","controlMsgOpts","maxControlLevel","tokenOpts","tokenName","map","max","Math","_lastControl","_lastControlError","_emitting","bindForm","ctrl","findParents","$parent","push","findChildren","$children","length","child","flatten","unique","debounce","parents","children","all","$form","pileOfMessages","maxErrorLevel","idx","$errorLevel","isNumber","$emit","omit","isEmpty","BROADCAST_DEBOUNCE_MS","bind","formName","controlName","formActions","format","levelDescription","description","DEFAULT_LEVEL","DEFAULT_HIDE_DELAY","DEFAULT_LEVELS","DEFAULT_DATA_FILE","hideDelay","selectColor","prevColor","disabled","enabled","self","curr","Date","ms","prevTime","prev","coerce","formatter","val","logFn","fn","split","len","i","skips","substr","names","disable","test","stack","message","viewData","$viewData","className","title","removeChild","parse","str","exec","n","parseFloat","type","y","d","h","m","s","short","round","long","plural","floor","ceil","MessagesCtrl","view","addChild","indexOf","parentName","Object","defineProperties","set","$view","reset","id","uniqueId","ID_PREFIX"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\"name\":\"angular-envoy\",\"version\":\"0.1.0\",\"description\":\"Highly flexible form validation messaging for AngularJS\",\"main\":\"index.js\",\"scripts\":{\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\"},\"author\":\"Christopher Hiller <chiller@focusvision.com>\",\"license\":\"MIT\",\"devDependencies\":{\"angular\":\"^1.4.1\",\"browserify\":\"^10.2.4\",\"chai\":\"^3.0.0\",\"eslint\":\"^0.23.0\",\"exorcist\":\"^0.4.0\",\"exposify\":\"^0.4.3\",\"grunt\":\"^0.4.5\",\"grunt-browserify\":\"^3.8.0\",\"grunt-bump\":\"^0.3.1\",\"grunt-cli\":\"^0.1.13\",\"grunt-contrib-clean\":\"^0.6.0\",\"grunt-dev-update\":\"^1.3.0\",\"grunt-eslint\":\"^15.0.0\",\"grunt-exorcise\":\"^2.0.0\",\"grunt-mocha-cov\":\"^0.4.0\",\"grunt-ngdocs\":\"^0.2.7\",\"jit-grunt\":\"^0.9.1\",\"load-grunt-config\":\"^0.17.1\",\"minifyify\":\"^7.0.1\",\"minimatch\":\"^2.0.8\",\"mocha\":\"^2.2.5\",\"mocha-lcov-reporter\":\"0.0.2\",\"through2\":\"^2.0.0\",\"time-grunt\":\"^1.2.1\",\"transformify\":\"^0.1.2\"},\"peerDependencies\":{\"angular\":\"^1.4.1\"},\"dependencies\":{\"debug\":\"^2.2.0\",\"lodash\":\"^3.9.3\"}}","'use strict';\n\nmodule.exports = require('./lib');\n","'use strict';\n\nvar angular = (typeof window !== \"undefined\" ? window.angular : typeof global !== \"undefined\" ? global.angular : null),\n  _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null),\n  directives = require('./directives'),\n  pkg = require('../package.json');\n\nvar MODULE_NAME = 'fv.envoy',\n  debug = require('debug')('envoy'),\n  envoy;\n\nfunction config($provide) {\n  $provide.decorator('ngFormDirective', require('./form-decorator'));\n  debug('%s v%s ready', pkg.name, pkg.version);\n}\nconfig.$inject = ['$provide'];\n\nenvoy = angular.module(MODULE_NAME, [])\n  .config(config)\n  .provider('$envoy', require('./envoy'));\n\n_.each(directives, function (directive, name) {\n  envoy.directive(name, directive);\n});\n\nmodule.exports = envoy;\n\n","'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null);\n\nvar debug = require('debug')('envoy:formDecorator');\n\n/**\n * This decorator monkeypatches the controller property of the ngForm\n * directive.\n * For some reason when you decorate a directive, $delegate is an Array\n * and the first element is the directive.\n * @param {Array} $delegate Directive(s) associated with tag \"form\", I guess\n * @returns {Array} Decorated array of directives?\n */\nfunction formDecorator($delegate) {\n\n  /**\n   * The real form directive.\n   * @type {form}\n   */\n  var form = _.first($delegate),\n\n    /**\n     * Original FormController.\n     * @type {form.FormController}\n     */\n    formController = form.controller;\n\n  /**\n   * We're monkeypatching FormController with this, if and only if\n   * the form has a name.\n   * @constructor\n   */\n  function MessagesFormController($element,\n    $attrs,\n    $scope,\n    $animate,\n    $interpolate,\n    $injector,\n    $envoy) {\n\n    // my kingdom for \"let\"\n    var $setValidity;\n\n    $injector.invoke(formController, this, {\n      $element: $element,\n      $scope: $scope,\n      $animate: $animate,\n      $interpolate: $interpolate,\n      $attrs: $attrs\n    });\n\n    /**\n     * This is a form.  This comes in handy, because NgModelController\n     * and FormController are very similar.\n     * @type {boolean}\n     */\n    this.$isForm = true;\n\n    if (this.$name) {\n\n      /**\n       * This FormController's original $setValidity() method\n       * @type {form.FormController#$setValidity}\n       */\n      $setValidity = this.$setValidity;\n\n      debug('Instantiating patched controller for form %s',\n        this.$name);\n\n      _.extend(this, {\n\n        /**\n         * If this form contains an \"alias\" attribute, we'll use it\n         * to look up messages.  This is useful if your form name is\n         * dynamic (interpolated).  Note interpolated form names were\n         * not implemented before AngularJS 1.3.0.\n         * Defaults to whatever the name of the form is.\n         * @type {string}\n         */\n        $alias: $attrs.alias || this.$name,\n\n        /**\n         * This form's Scope.  This will allow us to easily broadcast\n         * events within it.\n         * @type {ng.$rootScope.Scope}\n         */\n        $formScope: $scope,\n\n        /**\n         * Used to track this form's error state.  We'll need to\n         * do stuff if the state changes.\n         * @type {number}\n         */\n        $$lastErrorSize: 0,\n\n        /**\n         * If the number of errors in this form has increased or decreased\n         * and the control being set valid or invalid is a member of this\n         * form proper, then tell $envoy to broadcast an event that\n         * the form's validity changed (somewhat).\n         * @this FormController\n         */\n        $setValidity: function $envoySetValidity(token,\n          value,\n          control) {\n\n          /**\n           * If we set $isForm above, this is a subform of the parent\n           * and we don't care.\n           * @todo maybe we do care?\n           * @type {boolean}\n           */\n          var isNotForm = !control.$isForm,\n\n            /**\n             * We only care about controls that were explicitly added\n             * to this form.\n             * @type {boolean}\n             */\n            formHasControl = isNotForm && _.has(this, control.$name);\n\n          $setValidity.apply(this, arguments);\n\n          if (formHasControl &&\n            _.size(this.$error) !== this.$$lastErrorSize) {\n            $envoy.emit(this, control);\n            this.$$lastErrorSize = _.size(this.$error);\n          }\n        }\n      });\n\n      // see the note below at formDirective.$scope\n      if (!_.has($scope, this.$alias)) {\n        $scope[this.$alias] = this;\n      }\n    }\n  }\n  MessagesFormController.$inject = [\n    '$element',\n    '$attrs',\n    '$scope',\n    '$animate',\n    '$interpolate',\n    '$injector',\n    '$envoy'\n  ];\n\n  form.controller = MessagesFormController;\n\n  /**\n   * So this is a little hack.  I'm pretty sure this is not dangerous, but\n   * it could be.  The reason for this is that you may have a dynamic form\n   * name; something interpolated.  Say, \"myForm-2789618\".  A FormController\n   * will always place itself on the scope if it's given a name.  But it's\n   * also handy to be able to reference \"myForm\".  If form \"myForm-87329\"\n   * shared the same scope with \"myForm-2789618\", only one \"myForm\" could\n   * exist; thus, we just make a new scope.\n   * @type {boolean}\n   */\n  form.$scope = true;\n\n  return $delegate;\n}\nformDecorator.$inject = ['$delegate'];\n\nmodule.exports = formDecorator;\n","'use strict';\n\nmodule.exports = {\n  'envoyAction': require('./action'),\n  'envoyMessages': require('./messages'),\n  'envoyList': require('./list'),\n  'envoyProxy': require('./proxy')\n};\n","'use strict';\n\nvar opts = require('./opts'),\n  _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null);\n\nvar debug = require('debug')('envoy:$envoy:provider');\n\nfunction envoyProvider() {\n\n  /**\n   * Set options during config phase\n   * @param {Object} [newOpts] New options to assign onto defaults\n   * @returns {Object}\n   */\n  this.options = function options(newOpts) {\n    _.extend(opts, newOpts);\n    debug('New options set:', opts);\n    return opts;\n  };\n\n  this.$get = require('./factory');\n\n}\n\nmodule.exports = envoyProvider;\n","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","'use strict';\n\n/**\n * Describes a directive wherein you can supply an action (AngularJS\n * expression) to be executed from the message list view, for a particular\n * control.  In practice, you use this to activate a control to correct\n * an error when the message list displays a problem w/ yr control.\n * @example\n * <input name=\"title\"\n *        type=\"text\"\n *        ng-model=segment.title\"\n *        message-action=\"edit(segment)\"/>\n */\nfunction action($envoy) {\n\n  return {\n    restrict: 'A',\n    require: ['ngModel', '^form'],\n    link: function (scope, element, attrs, ctrls) {\n      var ngModel = ctrls[0],\n        form = ctrls[1],\n        action;\n\n      if ((action = attrs.messageAction) && ngModel.$name && form.$name) {\n        $envoy.setAction(form.$name, ngModel.$name, function () {\n          scope.$eval(action);\n        });\n      }\n    }\n  };\n}\naction.$inject = ['$envoy'];\n\nmodule.exports = action;\n","'use strict';\n\nvar opts = require('../envoy/opts');\n\n/**\n * Defines a directive which will display a list of all messages\n * for a form.\n * The form does not have to be the direct parent of this directive.\n * @example\n * <div messages-list=\"configForm\"></div>\n * <!-- or -->\n * <messages-list for=\"configForm\"></messages-list>\n */\nfunction list($envoy) {\n  return {\n    restrict: 'EA',\n    scope: true,\n    require: '^envoyMessages',\n    templateUrl: opts.templateUrl,\n    link: function (scope, element, attrs, envoyMessages) {\n      var parent = $envoy.findParentCtrl(attrs.envoyList ||\n        attrs.for, envoyMessages);\n\n      parent.bindView(scope);\n\n      scope.$on('$destroy', function () {\n        parent.unbindView();\n      });\n    }\n  };\n}\nlist.$inject = ['$envoy'];\n\nmodule.exports = list;\n","'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null);\n\n/**\n * @ngdoc directive\n * @description\n * Defines a directive which, when used with ngModel, will set the validity\n * of the associated NgModelController, based on the validity of the target\n * form.\n */\nfunction proxy($envoy) {\n\n  /**\n   * Anything that needs validating needs a token, so, here's one.\n   * @type {string}\n   */\n  var TOKEN = 'proxy';\n\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link: function (scope, element, attrs, ngModel) {\n      var target;\n      if ((target = attrs.envoyProxy)) {\n        element.addClass('errorlevel');\n\n        scope.$on('$formStateChanged', function (evt, data) {\n          var isInvalid;\n          //if (_.find(data.forms, { $name: target })) {\n            _.each($envoy.ERRORLEVELS,\n              function (errorlevel, errorLevelName) {\n                element.removeClass(errorLevelName);\n              });\n            isInvalid = data.errorLevel;\n            ngModel.$setValidity(TOKEN, isInvalid);\n            if (isInvalid) {\n              element.addClass(data.errorLevelName);\n            }\n          //}\n        });\n      }\n    }\n  };\n}\nproxy.$inject = ['$envoy'];\n\nmodule.exports = proxy;\n","'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null),\n  opts = require('./opts');\n\nvar BROADCAST_DEBOUNCE_MS = 250,\n  debug = require('debug')('envoy:$envoy:factory');\n\nfunction envoyFactory($http, $q) {\n\n  /**\n   * Error levels as configured in opts in order, by name\n   * @type {Array.<string>}\n   */\n  var LEVEL_ARRAY = _.pluck(opts.levels, 'name'),\n\n    /**\n     * Mapping of error level names to indices in {@link LEVEL_ARRAY}\n     * @type {Object.<string,number>}\n     */\n    LEVELS = _(LEVEL_ARRAY)\n      .invert()\n      .mapValues(_.parseInt)\n      .value(),\n\n    /**\n     * Lookup of forms and controls to any actions bound via the\n     * messageAction directive.  An action is simply an AngularJS\n     * expression which will be evaluated.\n     * @type {Object.<string,Object.<string,string>>}\n     */\n    actions = {},\n\n    /**\n     * Map of form name to MessagesCtrl bindings\n     * @type {Object.<string,MessagesCtrl>}\n     */\n    bindings = {},\n\n    prototype;\n\n  /**\n   * Retrieves a collection of messages for a form and/or control\n   * within that form.  If no parameters, returns the entirety of the\n   * data file.\n   * @param {FormController} form Form controller\n   * @returns {*} Value, if any\n   */\n  function $envoy(form) {\n    var result;\n    if ((result = $envoy._cache[form.$name])) {\n      return $q.when(result);\n    }\n    return $http.get(opts.dataFile, {\n      cache: true\n    })\n      .then(function (res) {\n\n        /**\n         * Entirety of the data file\n         * @type {Object}\n         */\n        var messages = res.data;\n\n        if (form) {\n          // If the form has an alias (use the \"alias\" directive),\n          // this name takes precedence.\n          messages = _(messages[form.$alias || form.$name])\n            // here we pick only the controls that are invalid.\n            .mapValues(function (controlMsgOptions, controlMsgName) {\n              var formControl = form[controlMsgName],\n              // if this is truthy, then we have errors in the given\n              // control\n                error = formControl && _.size(formControl.$error);\n\n              if (formControl && error) {\n                // get the problem tokens and grab any actions\n                // if present.  actions are assigned at the control\n                // level, but we don't have granular control over\n                // which validation token triggers which action.\n                // so, if there were two problems with one control,\n                // both tokens would receive the action prop.\n                return _(controlMsgOptions)\n                  .pick(_.keys(formControl.$error))\n                  .each(function (tokenInfo) {\n                    tokenInfo.action =\n                      $envoy.getAction(form.$name, controlMsgName);\n                  })\n                  .value();\n\n              }\n            })\n            .pick(_.identity)\n            .value();\n        }\n\n        $envoy._cache[form.$name] = messages;\n\n        return messages;\n      });\n  }\n\n  prototype = {\n\n    _cache: {},\n\n    /**\n     * Utility function to convert an error level into a number or\n     * string\n     * @param {(number|string)} [errorLevel] Error level, or default\n     *     level\n     * @returns {(number|string)} Corresponding string/number\n     */\n    level: function level(errorLevel) {\n      return _.isString(errorLevel) ?\n      LEVELS[errorLevel] || LEVELS[opts.defaultLevel] :\n      LEVEL_ARRAY[errorLevel] || opts.defaultLevel;\n    },\n\n    /**\n     * Given a `FormController`, calculate the maximum error level\n     * for its controls which are invalid.\n     * @param {FormController} form form to inspect\n     * @returns {Promise.<string>} Level name\n     * @throws if no FormController passed\n     */\n    formErrorLevel: function formErrorLevel(form) {\n      if (!form) {\n        throw new Error('parameter is required');\n      }\n      return $envoy(form)\n        .then(function (formMessages) {\n          return $envoy._formErrorLevel(form, formMessages);\n        });\n    },\n\n    _formErrorLevel: function _formErrorLevel(form, formMessages) {\n      /**\n       * Index of the default error level\n       * @type {number}\n       */\n      var defaultLevelNum = LEVELS[opts.defaultLevel],\n\n        /**\n         * Maximum error level of all validation tokens within all\n         * controls of this form\n         * @type {number}\n         */\n        maxLevel = _.reduce(formMessages,\n          function (result, controlMsgOpts) {\n\n            /**\n             * Maximum error level of any validation token within\n             * the control which is in \"invalid\" state.\n             * @type {number}\n             */\n            var maxControlLevel = _(controlMsgOpts)\n              .pick(function (tokenOpts, tokenName) {\n                return form.$error[tokenName];\n              })\n              .pluck('level')\n              .map($envoy.level)\n              .max();\n\n            return Math.max(result, maxControlLevel);\n          },\n          defaultLevelNum);\n\n      debug('Computed errorLevel \"%s\" for form \"%s\"',\n        $envoy.level(maxLevel),\n        form.$name);\n\n      return LEVEL_ARRAY[maxLevel];\n    },\n\n    _lastControl: null,\n    _lastControlError: null,\n    _emitting: null,\n    bindForm: function bindForm(ctrl, form) {\n      if (bindings[form.$name]) {\n        throw new Error('Form \"' + form.$name +\n          '\" already bound!  One envoyMessages directive per form, please.');\n      }\n      bindings[form.$name] = ctrl;\n    },\n    emit: function emit(form, control) {\n      function findParents(ctrl, list) {\n        list = list || [ctrl];\n        if (ctrl.$parent) {\n          list.push(ctrl.$parent);\n          return findParents(ctrl.$parent, list);\n        }\n        return list;\n      }\n\n      function findChildren(ctrl, list) {\n        list = list || [];\n        if (ctrl.$children.length) {\n          list.push.apply(list, ctrl.$children);\n          return _.map(ctrl.$children, function (child) {\n            return findChildren(child, list);\n          });\n        }\n        return _(list)\n          .flatten()\n          .unique()\n          .value();\n      }\n\n\n      var emit = _.debounce(function emit() {\n        var ctrl = bindings[form.$name],\n          parents = findParents(ctrl),\n          children = findChildren(ctrl),\n          ctrls = _.unique(parents.concat(children));\n\n        debug('Emitting from form \"%s\"; \"%s\" changed',\n          form.$name,\n          control.$name);\n\n        $envoy._emitting = $q.all(_.map(ctrls, function (ctrl) {\n          return $envoy(ctrl.$form);\n        }))\n          .then(function (pileOfMessages) {\n            var defaultLevel = LEVELS[opts.defaultLevel],\n              messages = {},\n              maxErrorLevel = _.reduce(pileOfMessages,\n                function (result, formMessages, idx) {\n                  var form = ctrls[idx].$form,\n                    errorLevelName = $envoy._formErrorLevel(form,\n                      formMessages),\n                    errorLevel = LEVELS[errorLevelName];\n\n                  form.$errorLevel = errorLevel;\n                  messages[form.$name] = formMessages;\n                  return _.isNumber(errorLevel) ?\n                    Math.max(result,\n                      errorLevel) :\n                    result;\n                },\n                defaultLevel);\n\n            form.$formScope.$emit('$formStateChanged',\n              {\n                errorLevel: maxErrorLevel,\n                errorLevelName: LEVEL_ARRAY[maxErrorLevel],\n                messages: _.omit(messages, _.isEmpty),\n                control: control\n              });\n\n            $envoy._lastControl = control;\n            $envoy._lastControlError = _.keys(control.$error);\n          });\n\n      }, BROADCAST_DEBOUNCE_MS);\n\n      delete $envoy._cache[form.$name];\n\n      if ($envoy._emitting) {\n        return $envoy._emitting.then(emit.bind(null,\n          form,\n          control));\n      }\n\n      return $q.when(emit());\n\n    },\n\n    /**\n     * Set an action to be executed at some point.  Used by the\n     * envoyList directive's view, so that you can click on an\n     * error and be taken to where the error is.\n     * @todo make controlName optional?\n     * @param {string} formName Name of form\n     * @param {string} controlName Name of control\n     * @param {string} action AngularJS expression to evaluate\n     */\n    setAction: function setAction(formName, controlName, action) {\n      var formActions = actions[formName] = actions[formName] || {};\n      formActions[controlName] = action;\n    },\n\n    /**\n     * Gets a stored action.\n     * @param {string} formName Name of form for action\n     * @param {string} controlName Name of control for action\n     * @returns {(string|undefined)} The action (AngularJS\n     *     expression), if it exists.\n     */\n    getAction: function getAction(formName, controlName) {\n      return _.get(actions, _.format('%s.%s', formName, controlName));\n    },\n\n    /**\n     * Utility function to get a parent envoy directive.\n     * @param {string} formName Find the messagesDirectiveCtrl\n     *     attached to form with this name\n     * @param {MessagesCtrl} envoyMessages Current\n     *     messagesDirectiveCtrl\n     * @returns {MessagesCtrl}\n     */\n    findParentCtrl: function findParentCtrl(formName, envoyMessages) {\n      while (envoyMessages.$name !== formName) {\n        envoyMessages = envoyMessages.$parent;\n        if (!envoyMessages) {\n          throw new Error('cannot find parent with name ' + formName);\n        }\n      }\n      return envoyMessages;\n    },\n\n    levelDescription: function levelDescription(errorLevel) {\n      var level;\n      return ((level = $envoy.LEVELS[errorLevel]) && level.description);\n    },\n\n    /**\n     * Exposed for handiness\n     * @type {string}\n     */\n    DEFAULT_LEVEL: opts.defaultLevel,\n\n    /**\n     * Exposed for handiness.  The kinder, gentler version of\n     * opts.levels\n     * @type {Object.<string,number>}\n     */\n    ERRORLEVELS: LEVELS,\n\n    /**\n     * Exposed for handiness\n     * @type {Array.<Object.<string,string>>}\n     */\n    LEVELS: opts.levels,\n\n    opts: opts\n\n  };\n\n  _.extend($envoy, prototype);\n\n  return $envoy;\n}\nenvoyFactory.$inject = ['$http', '$q'];\n\nmodule.exports = envoyFactory;\n","'use strict';\n\n/**\n * This number (in ms) needs to be higher than however long it takes to\n * hide any display generated by the `messagesList` directive.\n * @type {number}\n */\nvar DEFAULT_HIDE_DELAY = 900,\n\n  /**\n   * Default level and descriptions\n   * @type {Array.<Object.<string, string>>}\n   */\n  DEFAULT_LEVELS = [\n    {\n      name: 'ok',\n      description: 'Fixed!'\n    },\n    {\n      name: 'warning',\n      description: 'Warning'\n    },\n    {\n      name: 'error',\n      description: 'Error'\n    }\n  ],\n\n  /**\n   * Default web server path to JSON message definition file\n   * @type {string}\n   */\n  DEFAULT_DATA_FILE = 'messages.json',\n\n  /**\n   * The default level\n   * @type {string}\n   */\n  DEFAULT_LEVEL = 'ok';\n\nmodule.exports = {\n  levels: DEFAULT_LEVELS,\n  defaultLevel: DEFAULT_LEVEL,\n  dataFile: DEFAULT_DATA_FILE,\n  hideDelay: DEFAULT_HIDE_DELAY,\n  templateUrl: 'partials/messages.html'\n};\n\n","'use strict';\n\nmodule.exports = require('./messages');\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","'use strict';\n\nvar debug = require('debug')('envoy:directives:messages');\n\n/**\n * @ngdoc directive\n * @name fv.envoy.directive:envoyMessages\n * @requires fv.envoy.service:$envoy\n * @restrict AE\n * @param {string} [parent] If this directive is in a subform of some other\n * form which is *also* using the `messages` directive, and you wish to\n * display messages within its view, specify its form here.\n * @description\n * Enables display of messages for a form.\n */\n\n/**\n *\n *\n */\nfunction messages() {\n  return {\n    restrict: 'AE',\n    require: 'envoyMessages',\n    controller: require('./messages-ctrl'),\n    scope: true,\n    link: function link(scope, element, attrs, ctrl) {\n      scope.$on('$formStateChanged', function (evt, data) {\n        var viewData = ctrl.$viewData,\n          errorLevel;\n        if (!viewData) {\n          return;\n        }\n\n        errorLevel = data.errorLevel;\n        viewData.messages = data.messages;\n        viewData.error = !!errorLevel;\n        viewData.className = data.errorLevelName;\n        viewData.title = ctrl.title(errorLevel);\n\n        debug('envoyMessages directive for form \"%s\" received ' +\n          '$formStateChanged event; view data:',\n          ctrl.$name,\n          viewData);\n      });\n\n      scope.$on('$destroy', function () {\n        ctrl.$parent.removeChild(ctrl);\n      });\n    }\n  };\n}\n\nmessages.$inject = ['$envoy'];\n\nmodule.exports = messages;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null),\n  viewData = require('./viewdata');\n\nfunction MessagesCtrl($element,\n  $envoy,\n  $attrs,\n  $scope,\n  $interpolate) {\n\n  var view;\n\n  /**\n   * Bind a view Scope to this directive for display.  Used by\n   * `messagesList` directive.\n   * @param {ng.$rootScope.Scope} scope\n   * @returns {MessagesCtrl} This controller\n   */\n  this.bindView = function bindView(scope) {\n    if (view.scope) {\n      throw new Error('view already bound!');\n    }\n    view.scope = scope;\n    scope.data = viewData($envoy.DEFAULT_LEVEL);\n    return this;\n  };\n\n  /**\n   * Unbind the bound Scope of this controller.\n   * @returns {MessagesCtrl} This controller\n   */\n  this.unbindView = function unbindView() {\n    delete view.scope;\n    return this;\n  };\n\n  this.addChild = function addChild(child) {\n    this.$children = (this.$children || []).push(child);\n    child.$parent = this;\n    return this;\n  };\n\n  this.removeChild = function removeChild(child) {\n    this.$children.splice(this.$children.indexOf(child), 1);\n    delete child.$parent;\n    return this;\n  };\n\n  this.title = function title(errorLevel) {\n    return $envoy.levelDescription(errorLevel);\n  };\n\n  /**\n   * @this MessagesCtrl\n   */\n  (function init() {\n    var parentName, form;\n\n    this.$children = [];\n    this.$parent = null;\n\n    Object.defineProperties(this, {\n      $errorLevel: {\n        get: function getErrorLevel() {\n          return form.$errorLevel;\n        },\n        set: function setErrorLevel(value) {\n          form.$errorLevel = value;\n        }\n      },\n      $name: {\n        get: function getName() {\n          return form.$name;\n        }\n      },\n      $viewData: {\n        get: function getViewData() {\n          var data;\n          if ((data = _.get(view, 'scope.data'))) {\n            return data;\n          }\n          if (_.get(view, 'scope')) {\n            return (view.scope.data = viewData($envoy.DEFAULT_LEVEL));\n          }\n        },\n        set: function setViewData(data) {\n          view.scope.data = data;\n        }\n      }\n    });\n\n    form = this.$form = $element.controller('form');\n\n    if ($attrs.parent && (parentName = $interpolate($attrs.parent)($scope))) {\n      $envoy.findParentCtrl(parentName,\n        $element.parent().controller('envoyMessages')).addChild(this);\n\n      if (this.$parent.$form === form) {\n        this.$parent.removeChild(this);\n      }\n    }\n\n    view =\n      this.$parent ? (this.$view = this.$parent.$view) : (this.$view = {});\n\n    $envoy.bindForm(this, this.$form);\n\n  }.call(this));\n}\n\nMessagesCtrl.$inject = [\n  '$element',\n  '$envoy',\n  '$attrs',\n  '$scope',\n  '$interpolate'\n];\n\nmodule.exports = MessagesCtrl;\n","'use strict';\n\nvar _ = (typeof window !== \"undefined\" ? window._ : typeof global !== \"undefined\" ? global._ : null);\n\nvar ID_PREFIX = 'envoy-viewdata-',\n  debug = require('debug')('envoy:directives:messages:viewdata');\n\nfunction viewData(defaultLevel) {\n  var data = {\n    reset: function reset() {\n      this.error = false;\n      this.messages = {};\n      this.title = null;\n      this.className = null;\n      this.errorLevel = defaultLevel;\n    },\n    id: _.uniqueId(ID_PREFIX)\n  };\n  data.reset();\n  debug('Created viewdata object with id \"%s\"', data.id);\n  return data;\n}\n\nmodule.exports = viewData;\n\n"]}